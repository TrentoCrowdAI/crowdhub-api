{
    "id_requester": 0,
    "data": {
        "name": "My Toloka job",
        "description": "This is my Toloka job.",
        "instructions": "Some intructions....",
        "numVotes": 10,
        "maxVotes": 2,
        "reward": 17,
        "items_csv": "https://raw.githubusercontent.com/TrentoCrowdAI/servant-api/publish-job/src/example/papers-short.csv",
        "items_gold_csv": "https://raw.githubusercontent.com/TrentoCrowdAI/servant-api/publish-job/src/example/tests-short.csv",
        "design": {
            "markup": "<div class=\"paper-task\">\n    <!-- Paper -->\n    <div class=\"paper-container\">\n        <h2>{{Title}}</h2>\n        <p class=\"paper-text\">{{Abstract}}</p>\n            \n        <div>\n            <button type=\"button\" class=\"clear-all-highlights-button\">Clear highlights</button> \n            <small class=\"small\">Select from the text above to highlight the part that supports your decision.</small>\n        </div>\n    </div>\n\n    <!-- About older adults? -->\n    <div>\n        <p>Does the paper describe a study that involves older adults?</p>\n             \n        \n        {{field type=\"radio\" name=\"in_out_radio\" label=\"Yes\" value=\"yes\" hotkey=\"1\"}}\n        {{field type=\"radio\" name=\"in_out_radio\" label=\"No\" value=\"no\" hotkey=\"2\"}}\n        {{field type=\"radio\" name=\"in_out_radio\" label=\"Maybe\" value=\"maybe\" hotkey=\"3\"}}\n    </div>\n       \n    <!-- Decision explaination -->\n    <div>\n        <p>Explain your decision</p>\n        {{field type=\"textarea\" name=\"decision_explaination\"}}\n    </div>\n        \n    <!-- Highlight text -->\n    <div class=\"highlighted_parts_container\">\n        <p>If you were to select one or more sentences (up to 3) most useful for your decision, which ones would you select?</p>\n        <p>In the abstract, select the part of the text that motivated your decision. The resulting text will be highlighted.</p>\n            \n        <!-- Hidden field that contains the higlighted parts of paper -->\n        {{field type=\"textarea\" name=\"highlighted_parts\"}}\n    </div>\n</div>",
            "javascript": "exports.Task = extend(TolokaHandlebarsTask, function (options) {\n    TolokaHandlebarsTask.call(this, options);\n}, {\n    onRender: function() {\n        const that = this;\n        // When onRender is called, the question and the input fields are not attached to the DOM yet, so\n        // we need to initialize the highlight library in the next loop\n        setTimeout(function () {\n            initialize(that.getTask().id, that.getDOMElement());\n        });\n    },\n    validate: function(solution) {\n        // Copy the highlighted text on the solution object\n        const id = this.getTask().id;\n        solution.output_values.highlighted_parts = updateHiddenField(id, false);\n        // then delegate the validation logic to Toloka\n        return TolokaHandlebarsTask.prototype.validate.apply(this, arguments);\n    },\n});\n    \nconst highlighters = {};\nfunction initialize (taskId, DOMElement) {\n    if (highlighters[taskId]) {\n        // Toloka updates the same page when the performer completes a HIT, so we need to clear\n        // the last instance of the library\n        highlighters[taskId].destroy();\n        console.log('old highlighter destroyed');\n    }\n    const paperContainer = $(DOMElement).find('.paper-task');\n    setupHighlighter(taskId, paperContainer);\n    setupClearAllHighlightsButton();\n    setupClearSingleHighlight();\n}\n    \nfunction setupHighlighter (id, container) {\n    const $container = $(container);\n    // Assign an id\n    $container.attr('data-paper-id', id);\n    \n    const paperText = $container.find('.paper-text')[0];\n    highlighters[id] = new TextHighlighter(paperText, {\n        onAfterHighlight: function (range) {\n            updateHiddenField(id, true);\n        }\n    });   \n}\n    \nfunction updateHiddenField (id, hideValidationErrorPopup) {\n    if (hideValidationErrorPopup){\n        $('div.highlighted_parts_container .popup').removeClass('popup_visible');\n    }\n    const highlithter = highlighters[id];\n    const $hiddenField = $('div.paper-task[data-paper-id=' + id + '] textarea[name=highlighted_parts]');\n    let json = \"\";\n    if (highlithter.getHighlights().length > 0) {\n        json = highlithter.serializeHighlights();\n    }\n        \n    $hiddenField.val(json);\n    return json;\n}\n    \nfunction setupClearAllHighlightsButton () {\n    $('button.clear-all-highlights-button').on('click', function (e) {\n        e.preventDefault();\n            \n        const id = $(e.currentTarget).parent().parent().parent().attr('data-paper-id');\n            \n        highlighters[id].removeHighlights();\n        updateHiddenField(id, true);\n    });\n}\n   \nfunction setupClearSingleHighlight () {\n    $('.paper-container p').on('click', '.highlighted', function (e) {\n        const $target = $(e.currentTarget);\n        const id = $target.parent().parent().parent().attr('data-paper-id');\n        highlighters[id].removeHighlights($target[0]);\n            \n        updateHiddenField(id, true);\n    });\n}\n// utility function given by F8\nfunction extend(ParentClass, constructorFunction, prototypeHash) {\n  constructorFunction = constructorFunction || function () {};\n  prototypeHash = prototypeHash || {};\n  if (ParentClass) {\n    constructorFunction.prototype = Object.create(ParentClass.prototype);\n  }\n  for (var i in prototypeHash) {\n    constructorFunction.prototype[i] = prototypeHash[i];\n  }\n  return constructorFunction;\n}",
            "css": "/*\n        Instead of hiding the hidden text area with the 'hidden' attribute, use the css to make it\n        invisible. Doing this we can use the validation provided by AMT.\n    */\n    textarea.textarea__textarea[name=highlighted_parts] {\n        height: 0;\n        width: 0;\n        padding: 0;\n        overflow: hidden;\n        border: 0;\n        resize: none;\n        outline: none !important;\n        background: transparent;\n        color: transparent;\n  \n        box-shadow: none;\n        -webkit-box-shadow: none;\n        -moz-box-shadow: none;    \n    }\n    \n    /*\n        Little flag near the highlighted portion of text to clear the highlight\n    */\n    .highlighted:hover:before {\n        color: white;\n        content: \"Ã—\";\n        position: absolute;\n        padding-left: 2px;\n        padding-right: 2px;\n        background: black;\n        padding-left: 2px;\n    }\n    .paper-container {\n        border: 1px solid black;\n        padding: 1em;\n    }\n    .paper-text {\n        cursor: copy;\n    }\n    textarea {\n        width: 100%;\n    }\n    \n    .field_type_textarea {\n        width: 100%;\n    }"
        }
    }
}